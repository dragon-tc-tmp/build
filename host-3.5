#!/bin/bash
# Copyright (C) 2015 Joe Maples
#
# Licensed under the Apache License, Version 2.0 (the "License");
#   You may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

# Define Color Values
red=$(tput setaf 1) # red
grn=$(tput setaf 2) # green
blu=$(tput setaf 4) # blue
cya=$(tput setaf 6) # cyan
txtbld=$(tput bold) # Bold
bldred=${txtbld}$(tput setaf 1) # red
bldgrn=${txtbld}$(tput setaf 2) # green
bldblu=${txtbld}$(tput setaf 4) # blue
bldcya=${txtbld}$(tput setaf 6) # cyan
txtrst=$(tput sgr0) # Reset

###########################################################################
###########################################################################
#####                                                                 #####
#####              B U I L D   C O N F I G U R A T I O N              #####
#####                                                                 #####
###########################################################################
###########################################################################

# Find Source Root
cd ../ && export TOOLCHAIN_ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )";
cd build;

# Make sure LLVM and friends are at the correct version, 3.5
cd $TOOLCHAIN_ROOT/llvm && git reset --hard && git fetch https://github.com/frap129/llvm.git release_35 && git checkout FETCH_HEAD && cd $TOOLCHAIN_ROOT/build;
cd $TOOLCHAIN_ROOT/llvm/tools/clang && git reset --hard && git fetch https://github.com/frap129/clang.git release_35 && git checkout FETCH_HEAD && cd $TOOLCHAIN_ROOT/build;
cd $TOOLCHAIN_ROOT/llvm/tools/polly && git reset --hard && git fetch http://llvm.org/git/polly.git release_35 && git checkout FETCH_HEAD && cd $TOOLCHAIN_ROOT/build;

# Find Host OS and set OS specific variables
IS_DARWIN=$(uname -a | grep Darwin)
if [ -n "$IS_DARWIN" ]; then
  CPUS=$(sysctl hw.ncpu | awk '{print $2}')
  DATE=gdate
else
  CPUS=$(grep "^processor" /proc/cpuinfo | wc -l)
  DATE=date
fi

# Optimize CPU Threads
JOBS=$(bc <<< "($CPUS-1)*2")

# Determine Make flags
MAKE_FLAGS=-j"$JOBS";

# Clean LLVM, CLooG, and ISL
if [ -e $TOOLCHAIN_ROOT/llvm/Makefile ];
then
    cd $TOOLCHAIN_ROOT/llvm;
    make $MAKE_FLAGS clean;
    make $MAKE_FLAGS distclean;
fi;

if [ -e $TOOLCHAIN_ROOT/cloog/Makefile ];
then
    cd $TOOLCHAIN_ROOT/cloog;
    make $MAKE_FLAGS clean;
    make $MAKE_FLAGS distclean;
fi;

if [ -e $TOOLCHAIN_ROOT/isl/Makefile ];
then
    cd $TOOLCHAIN_ROOT/isl;
    make $MAKE_FLAGS clean;
    make $MAKE_FLAGS distclean;
fi;


cd $TOOLCHAIN_ROOT/build;

# Export Prefix Path
export PREFIX_PATH=$TOOLCHAIN_ROOT/out/host-3.5;
export PREFIX=--prefix=$PREFIX_PATH;

if [ -d "$PREFIX_PATH" ];
then
    rm -rf $PREFIX_PATH;
    mkdir -p $PREFIX_PATH;
else
    mkdir -p $PREFIX_PATH;
fi;


# Add Optimizations to LLVM
[ -z "$CFLAGS" ] && export CFLAGS="-O2"
[ -z "$CXXFLAGS" ] && export CXXFLAGS="-O2"

# Configure LLVM
cd $TOOLCHAIN_ROOT/llvm;
./configure $PREFIX --enable-shared --enable-jit --enable-libffi --enable-optimized --enable-targets=all --enable-threads --enable-pthread --enable-gold --enable-plugins --disable-werror --with-isl=/usr/ --with-binutils-include=$TOOLCHAIN_ROOT/llvm/tools/binutils/include;

# Find Time Before Build 
START_TIME=$($DATE +%s)

# Build LLVM
if ! time make $MAKE_FLAGS -DLINK_POLLY_INTO_TOOLS:Bool=ON; then
  echo "LLVM failed to build."
  exit 1
else
  make install && make install;
  # Echo Time if Build Finishes
  END_TIME=$($DATE +%s)
  tmin=$(( (END_TIME-START_TIME)/60 ))
  tsec=$(( (END_TIME-START_TIME)%60 ))
  echo -e ${bldgrn}"Total time elapsed:${txtrst} ${grn}$tmin minutes $tsec seconds"${txtrst}
fi
